[{"/home/hp/my_test_task/src/app/FormComponent.js":"1","/home/hp/my_test_task/src/app/App.js":"2","/home/hp/my_test_task/src/index.js":"3"},{"size":2439,"mtime":1607349028759,"results":"4","hashOfConfig":"5"},{"size":205,"mtime":1607342646059,"results":"6","hashOfConfig":"5"},{"size":196,"mtime":1607342083020,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1xdoase",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hp/my_test_task/src/app/FormComponent.js",["15","16"],"import React from 'react'\n\nconst useValidation = (value, validations) => {\n  const [isEmpty, setEmpty] = React.useState(true)\n  const [minLengthError, setMinLengthError] = React.useState(false)\n\n  React.useEffect(()=>{\n    for (const validation in validations){\n      switch(validation){\n        case 'minLength':\n          value.length < validations[validation]\n            ? setMinLengthError(true)\n            : setMinLengthError(false)\n          break\n        case 'isEmpty':\n          value ? setEmpty(false) : setEmpty(true)\n          break\n      }\n    }\n  }, [value])\n\n  return {\n    isEmpty,\n    minLengthError\n  }\n}\n\nconst useInput = (initialValue, validations) => {\n  const [value, setValue] = React.useState(initialValue)\n  const [isDirty, setDirty] = React.useState(false)\n  const valid = useValidation(value, validations)\n\n  const onChange = (e) => {\n    const {value} = e.target\n    setValue(value)\n  }\n  const onBlur = (e) => {\n    setDirty(true)\n  }\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid\n  }\n}\n\nfunction FormComponent() {\n  const username = useInput('', {isEmpty:true, minLength:3, isUserName:true})\n  const password = useInput('', {isEmpty:true, minLength:5, maxLength:30})\n  \n  return (\n    <div>\n      <form>\n        {username.isDirty && username.isEmpty && <>username неможет быть пустым</>}\n        {username.isDirty && username.minLengthError && <>username длинна менее 5 символов</>}\n        <input \n          value={username.value} \n          onBlur={(e)=> username.onBlur(e)}\n          onChange={(e)=> username.onChange(e)}\n          placeholder=\"Пользователь\"\n          name=\"username\"\n          type=\"text\"\n        />\n        {password.isDirty && password.isEmpty && <>password не может быть пустым</>}\n        {password.isDirty && password.minLengthError && <>password пароль длинна менее 5 символов</>}\n        <input \n          value={password.value} \n          onBlur={(e)=> password.onBlur(e)}\n          onChange={(e)=> password.onChange(e)}\n          placeholder=\"Пароль\"\n          name=\"password\"\n          type=\"password\"\n        />\n        <button \n          disabled={username.minLengthError || password.minLengthError} \n          type=\"submit\"\n          onClick={()=>{}}\n        >Войти\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default FormComponent","/home/hp/my_test_task/src/app/App.js",[],"/home/hp/my_test_task/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":9,"column":7,"nodeType":"19","messageId":"20","endLine":18,"endColumn":8},{"ruleId":"21","severity":1,"message":"22","line":20,"column":6,"nodeType":"23","endLine":20,"endColumn":13,"suggestions":"24"},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'validations'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [validations, value]",{"range":"28","text":"29"},[566,573],"[validations, value]"]