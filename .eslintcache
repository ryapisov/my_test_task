[{"/home/hp/my_test_task/src/app/App.js":"1","/home/hp/my_test_task/src/app/screens/Users/index.js":"2","/home/hp/my_test_task/src/app/components/Input.js":"3","/home/hp/my_test_task/src/app/store/reducers/authReducer.js":"4","/home/hp/my_test_task/src/app/store/index.js":"5","/home/hp/my_test_task/src/index.js":"6","/home/hp/my_test_task/src/app/store/reducers/usersReducer.js":"7","/home/hp/my_test_task/src/app/components/Button.js":"8","/home/hp/my_test_task/src/app/store/actions/usersActions.js":"9","/home/hp/my_test_task/src/app/screens/Users/UserList.js":"10","/home/hp/my_test_task/src/app/screens/Users/UserItem.js":"11","/home/hp/my_test_task/src/app/store/reducers/personReducer.js":"12","/home/hp/my_test_task/src/app/screens/Auth/index.js":"13","/home/hp/my_test_task/src/app/hooks/useInputValidation.js":"14","/home/hp/my_test_task/src/app/components/ErrorMessage.js":"15","/home/hp/my_test_task/src/app/screens/Users/FormNewUser.js":"16","/home/hp/my_test_task/src/app/store/types.js":"17"},{"size":709,"mtime":1607601162896,"results":"18","hashOfConfig":"19"},{"size":217,"mtime":1607600102227,"results":"20","hashOfConfig":"19"},{"size":430,"mtime":1607596369497,"results":"21","hashOfConfig":"19"},{"size":164,"mtime":1607434740121,"results":"22","hashOfConfig":"19"},{"size":561,"mtime":1607582579811,"results":"23","hashOfConfig":"19"},{"size":196,"mtime":1607342083020,"results":"24","hashOfConfig":"19"},{"size":1620,"mtime":1607561336059,"results":"25","hashOfConfig":"19"},{"size":325,"mtime":1607596480060,"results":"26","hashOfConfig":"19"},{"size":1322,"mtime":1607453023806,"results":"27","hashOfConfig":"19"},{"size":1339,"mtime":1607596497245,"results":"28","hashOfConfig":"19"},{"size":3879,"mtime":1607598603186,"results":"29","hashOfConfig":"19"},{"size":155,"mtime":1607438460178,"results":"30","hashOfConfig":"19"},{"size":1235,"mtime":1607601974276,"results":"31","hashOfConfig":"19"},{"size":1785,"mtime":1607601747073,"results":"32","hashOfConfig":"19"},{"size":150,"mtime":1607596237178,"results":"33","hashOfConfig":"19"},{"size":2811,"mtime":1607600053758,"results":"34","hashOfConfig":"19"},{"size":274,"mtime":1607438327970,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xdoase",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hp/my_test_task/src/app/App.js",["79"],"/home/hp/my_test_task/src/app/screens/Users/index.js",[],"/home/hp/my_test_task/src/app/components/Input.js",["80"],"import { findAllByPlaceholderText } from '@testing-library/react'\nimport React from 'react'\n\nconst Input = (props) => {\n  const { type, record, name, onChange, value,  placeholder} = props\n  return (\n    <input \n      type={type ? type : 'text' }\n      onChange={(e)=> onChange(e.target.value)}\n      disabled={!record}\n      value={value || ''}\n      placeholder={placeholder}\n      name={name}\n    />\n  )\n}\n\nexport default Input",["81","82"],"/home/hp/my_test_task/src/app/store/reducers/authReducer.js",[],["83","84"],"/home/hp/my_test_task/src/app/store/index.js",[],"/home/hp/my_test_task/src/index.js",[],["85","86"],"/home/hp/my_test_task/src/app/store/reducers/usersReducer.js",[],"/home/hp/my_test_task/src/app/components/Button.js",[],["87","88"],"/home/hp/my_test_task/src/app/store/actions/usersActions.js",["89"],"import axios from 'axios'\nimport {\n  ADD_MANY_USERS\n // SORT_BY_ID\n} from '../types'\n\nconst PATH = 'api/v1/users?_pages=10'\nconst PROTOCOL = 'http://'\nconst ROOT_URL = 'emphasoft-test-assignment.herokuapp.com/'\n\nexport const fetchUsers = (token) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'get',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:ADD_MANY_USERS, payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}\n\nexport const rewriteUsers = (payload) => ({type:'SORT_BY_ID', payload})\n\nexport const addUser = ({}) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'post',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:'ADD_NEW_USER', payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}","/home/hp/my_test_task/src/app/screens/Users/UserList.js",["90","91"],"import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchUsers, rewriteUsers, addUser} from '../../store/actions/usersActions'\nimport UserItem from './UserItem'\nimport Button from '../../components/Button'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  const users = useSelector((state)=> state.users.users )\n\n  useEffect(()=>{\n    dispatch(fetchUsers())\n  }, [dispatch])\n  \n  const sortBy_Id = () => {\n    const newUsers= users.sort((prev, next) => prev.id - next.id)\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const sortBy_Username = () => {\n    const newUsers = users.sort((prev, next) => {\n      if ( prev.username < next.username ) return -1\n      if ( prev.username < next.username ) return 1\n    })\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const create_User = () => {\n    dispatch(addUser)\n  }\n\n  return (\n    <>\n      <div className=\"buttons-sort\">\n        <Button \n          text=\"Сортировать по ID\" \n          onClick={()=>sortBy_Id()} \n          title=\"Sort by id\"\n        />\n        <Button \n          text=\"Сортировать по Username\" \n          onClick={()=>sortBy_Username()} \n          title=\"Sort By username\"\n        />\n      </div>\n      {users.map((user, i)=> <UserItem key={i} {...user}/>)}\n    </>\n  )\n}\n\nexport default UserList","/home/hp/my_test_task/src/app/screens/Users/UserItem.js",["92"],"import React, {useState} from 'react'\nimport iconEditSvg from '../../icons/edit.svg'\nimport iconSaveSvg from '../../icons/save.svg'\nimport iconDeleteSvg from '../../icons/delete.svg'\nimport iconCloseSvg from '../../icons/close.svg'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Button from '../../components/Button'\nimport useInputValidation from '../../hooks/useInputValidation'\n\nconst UserItem = (props) => {\n  const [isEdit, setIsEdit] = useState(false)\n  const userName = useInputValidation('', {isEmpty:true, minLength:3, isUserName:true}, 'username')\n  const firstName = useInputValidation('', {isEmpty:true, minLength:5, maxLength:30}, 'firstname')\n  const lastName = useInputValidation('', {isEmpty:true, minLength:3, isUserName:true}, 'lastname')\n  const lastLogin = useInputValidation('', {isEmpty:true, minLength:5, maxLength:30}, 'lastlogin')\n  // TODO: is_superuser ??\n  // TODO: is_active  ??\n\n  /*\n    Устанавливает флаг, разрешает или\n    запрещает редактировать поля input.\n  */\n  const openEditHandler = () => {\n \n  }\n  /* \n    Если форма редактирования закрыта \n    без изменений, тогда вернуть State \n    в начальное состояние.\n  */\n  // const closeEditHandler = () => {\n  //   setUserName(props.username)\n  //   setFirstName(props.first_name)\n  //   setLastName(props.last_name)\n  //   setLastLogin(props.last_login)\n  //   setIsEdit(!isEdit)\n  // }\n  \n  const deleteUserHandler = (id) => {\n    // TODO  \n    alert('Удаление пользователя')\n  }\n\n  const updateUserFormHandler = (e) => {\n    e.preventDefault()\n    // TODO  \n    console.log(e.target[0])\n    alert('Обновить пользователя')\n  \n  }\n\n  return (\n    <>\n      <ErrorMessage text={userName.isDirty && userName.message} />\n      <ErrorMessage text={firstName.isDirty && firstName.message} />\n      <ErrorMessage text={lastName.isDirty && lastName.message} />\n      <ErrorMessage text={lastLogin.isDirty && lastLogin.message} />\n      <form onSubmit={(e)=> updateUserFormHandler(e)}>\n        {/* <span>ID: {props.id}</span> */}\n        <input type=\"hidden\" name=\"userId\" value={props.id} />\n        <input\n            value={userName.value} \n            onBlur={(e)=> userName.onBlur(e)}\n            onChange={(e)=> userName.onChange(e)}\n            placeholder=\"username\"\n            name=\"username\"\n          />\n          <input\n            value={firstName.value} \n            onBlur={(e)=> firstName.onBlur(e)}\n            onChange={(e)=> firstName.onChange(e)}\n            placeholder=\"firstname\"\n            name=\"firstname\"\n          />\n          <input\n            value={lastName.value} \n            onBlur={(e)=> lastName.onBlur(e)}\n            onChange={(e)=> lastName.onChange(e)}\n            placeholder=\"lastName\"\n            name=\"lastName\"\n          />\n          <input\n            value={lastLogin.value} \n            onBlur={(e)=> lastLogin.onBlur(e)}\n            onChange={(e)=> lastLogin.onChange(e)}\n            placeholder=\"lastLogin\"\n            name=\"lastLogin\"\n            record={true} \n          />\n       \n        {\n          !isEdit ?\n            <Button \n              title=\"Edit\"\n              onClick={openEditHandler} \n              img={iconEditSvg} \n            />\n        :\n          <>\n            <Button \n              type=\"submit\" \n              img={iconSaveSvg} \n              title=\"Save\" \n            />\n            <Button  \n              img={iconDeleteSvg} \n              title=\"Delete\" \n              onClick={()=>deleteUserHandler(props.id)}\n            />\n            <Button \n              img={iconCloseSvg} \n              title=\"Cancel\" \n              onClick={()=>{}} \n            />\n          </>\n       }\n      </form>\n    </>\n  )\n}\n\nexport default UserItem ","/home/hp/my_test_task/src/app/store/reducers/personReducer.js",[],"/home/hp/my_test_task/src/app/screens/Auth/index.js",[],"/home/hp/my_test_task/src/app/hooks/useInputValidation.js",["93"],"import React from 'react'\n\n/**\n * @param {*} value\n * @param {*} validations\n*/\n\nconst useValidation = (value, validations, nameInput) => {\n  const [isEmpty, setEmpty] = React.useState(true)\n  const [minLengthError, setMinLengthError] = React.useState(false)\n  const [inputValid, setInputValid] = React.useState(false)\n\n  React.useEffect(()=>{\n    for (const validation in validations){\n      switch(validation){\n        case 'minLength':\n          value.length < validations[validation]\n            ? setMinLengthError(true)\n            : setMinLengthError(false)\n          break\n        case 'isEmpty':\n          value ? setEmpty(false) : setEmpty(true)\n          break\n        default:\n          break\n      }\n    }\n  }, [value, validations]) \n\n  React.useEffect(()=>{\n    if(isEmpty || minLengthError){\n      setInputValid(false)\n    }else{\n      setInputValid(true)\n    }\n  }, [isEmpty, minLengthError])\n\n\n  let message\n  switch(true) {\n    case (isEmpty): message = `Поле ${nameInput} не должно быть пустым`; break\n    case (minLengthError): message = `В поле ${nameInput} минимальная длинна`; break\n    default: break\n  }\n      \n  return {\n    isEmpty,\n    minLengthError,\n    message,\n    inputValid\n  }\n}\n\n/**\n * @param {*} initialValue\n * @param {*} validations\n*/\n\nconst useInputValidation = (initialValue, validations, nameInput) => {\n  const [value, setValue] = React.useState(initialValue)\n  const [isDirty, setDirty] = React.useState(false)\n  const valid = useValidation(value, validations, nameInput)\n  const onChange = (e) => {\n    setValue(e.target.value)\n  }\n  const onBlur = (e) => {\n    setDirty(true)\n  }\n  return {\n    value,\n    onChange,\n    onBlur,\n    isDirty,\n    ...valid\n  }\n}\n\nexport default useInputValidation","/home/hp/my_test_task/src/app/components/ErrorMessage.js",[],"/home/hp/my_test_task/src/app/screens/Users/FormNewUser.js",[],"/home/hp/my_test_task/src/app/store/types.js",[],{"ruleId":"94","severity":1,"message":"95","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":34},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"99","replacedBy":"105"},{"ruleId":"101","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"101","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":33,"column":25,"nodeType":"111","messageId":"112","endLine":33,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":21,"column":46,"nodeType":"115","messageId":"116","endLine":21,"endColumn":48},{"ruleId":"94","severity":1,"message":"117","line":28,"column":9,"nodeType":"96","messageId":"97","endLine":28,"endColumn":20},{"ruleId":"94","severity":1,"message":"118","line":11,"column":18,"nodeType":"96","messageId":"97","endLine":11,"endColumn":27},{"ruleId":"94","severity":1,"message":"119","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":20},"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","'findAllByPlaceholderText' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],["120"],["121"],["120"],["121"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'create_User' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","'inputValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]