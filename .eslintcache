[{"/home/hp/my_test_task/src/app/App.js":"1","/home/hp/my_test_task/src/index.js":"2","/home/hp/my_test_task/src/app/store/index.js":"3","/home/hp/my_test_task/src/app/store/types.js":"4","/home/hp/my_test_task/src/app/store/reducers/usersReducer.js":"5","/home/hp/my_test_task/src/app/store/reducers/authReducer.js":"6","/home/hp/my_test_task/src/app/screens/Users/index.js":"7","/home/hp/my_test_task/src/app/screens/Users/components/UserList.js":"8","/home/hp/my_test_task/src/app/screens/Users/components/UserItem.js":"9","/home/hp/my_test_task/src/app/store/reducers/personReducer.js":"10","/home/hp/my_test_task/src/app/store/actions/usersActions.js":"11","/home/hp/my_test_task/src/app/screens/Users/components/UserNew.js":"12","/home/hp/my_test_task/src/app/screens/Users/components/Input.js":"13","/home/hp/my_test_task/src/app/screens/Users/components/ErrorsMessage.js":"14"},{"size":1388,"mtime":1607503059575,"results":"15","hashOfConfig":"16"},{"size":196,"mtime":1607342083020,"results":"17","hashOfConfig":"16"},{"size":561,"mtime":1607438565041,"results":"18","hashOfConfig":"16"},{"size":274,"mtime":1607438327970,"results":"19","hashOfConfig":"16"},{"size":1625,"mtime":1607452832756,"results":"20","hashOfConfig":"16"},{"size":164,"mtime":1607434740121,"results":"21","hashOfConfig":"16"},{"size":168,"mtime":1607438063391,"results":"22","hashOfConfig":"16"},{"size":3218,"mtime":1607503546542,"results":"23","hashOfConfig":"16"},{"size":2892,"mtime":1607534587800,"results":"24","hashOfConfig":"16"},{"size":155,"mtime":1607438460178,"results":"25","hashOfConfig":"16"},{"size":1322,"mtime":1607453023806,"results":"26","hashOfConfig":"16"},{"size":1786,"mtime":1607534446420,"results":"27","hashOfConfig":"16"},{"size":282,"mtime":1607530647720,"results":"28","hashOfConfig":"16"},{"size":288,"mtime":1607534597488,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1xdoase",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hp/my_test_task/src/app/App.js",["65","66","67"],"import React from 'react'\nimport './App.css'\nimport {Provider} from 'react-redux'\nimport {store} from './store'\nimport Users from './screens/Users'\nimport edit from './icons/edit.svg'\nimport save from './icons/save.svg'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\"> \n        <div className=\"close\">выйти</div>\n        <div className=\"wrapper\">\n           <div className=\"newsletter\"> \n            <h2 className=\"title\">\n              Тестовое задание в компанию \n              <a href=\"https://emphasoft.com\">Emphasoft</a>\n            </h2>\n            <Users/>\n          </div>\n        </div>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n\n\n{/* <div className=\"App\"> \n<div className=\"wrapper\">\n   <div className=\"newsletter\"> \n    <h2 className=\"title\">\n      Тестовое задание в компанию \n      <a href=\"https://emphasoft.com\">Emphasoft</a>\n    </h2>\n    <div className=\"error\">\n      <span>Поле логин не должно быть пустым</span>\n      <span>Поле пароль не должно быть пустым</span>\n    </div>\n    <form onSubmit={()=>{}}>\n      <input type=\"text\" placeholder=\"Имя\" />\n      <input type=\"text\" placeholder=\"Email\" />\n      <button type=\"submit\" title=\"Submit\">Отправить</button>\n    </form>\n  </div>\n</div>\n</div> */}",["68","69"],"/home/hp/my_test_task/src/index.js",[],["70","71"],"/home/hp/my_test_task/src/app/store/index.js",[],["72","73"],"/home/hp/my_test_task/src/app/store/types.js",[],"/home/hp/my_test_task/src/app/store/reducers/usersReducer.js",[],"/home/hp/my_test_task/src/app/store/reducers/authReducer.js",[],"/home/hp/my_test_task/src/app/screens/Users/index.js",[],"/home/hp/my_test_task/src/app/screens/Users/components/UserList.js",["74","75","76"],"import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchUsers, rewriteUsers, addUser} from '../../../store/actions/usersActions'\nimport {UserNew} from './UserNew'\nimport {UserItem} from './UserItem'\n\nexport const UserList = () => {\n  const dispatch = useDispatch()\n  const users = useSelector((state)=> state.users.users )\n\n  useEffect(()=>{\n    dispatch(fetchUsers())\n  }, [])\n  \n  const sortBy_Id = () => {\n    const newUsers= users.sort((prev, next) => prev.id - next.id)\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const sortBy_Username = () => {\n    const newUsers = users.sort((prev, next) => {\n      if ( prev.username < next.username ) return -1\n      if ( prev.username < next.username ) return 1\n    })\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const create_User = () => {\n    \n    dispatch(addUser)\n  }\n\n  return (\n    <>\n      <UserNew />\n      \n      <div className=\"buttons-sort\">\n        <button \n          type=\"submit\" \n          title=\"Sort by id\"\n          onClick={()=> sortBy_Id()}\n        >\n        Сортировать по ID\n        </button>\n        <button \n          type=\"submit\"\n          title=\"Sort By username\"\n          onClick={()=> sortBy_Username()}\n        >\n        Сортировать по Username\n        </button>\n      </div>\n      {users.map((user, i)=> <UserItem key={i} {...user}/>)}\n    </>\n  )\n}\n\n\n// import React from 'react'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {addCustomerAction, removeCustomerAction} from './store/actions/customersActions'\n// import {fetchCustomers} from './redux/actions/customersActions'\n\n// export const UserList = () => {\n//   const dispatch = useDispatch()\n//   const cash = useSelector(s => s.cash.cash)\n//   const customers = useSelector(s => s.customers.customers)\n\n//   const addCash = () => {\n//     dispatch({type:'ADD_CASH', cash:5})\n//   }\n\n//   const removeCash = () => {\n//     dispatch({type:'GET_CASH', cash:1})\n//   }\n\n//   const addCustomer = (name) => {\n//     const customer = {\n//       name: name,\n//       id: Date.now()\n//     }\n//     dispatch(addCustomerAction(customer))\n//   }\n\n//   const removeCustomer = (customer) => {\n//     dispatch(removeCustomerAction(customer.id))\n//   }\n\n//   return (\n//     <>\n//       {cash}\n//       <button onClick={()=> addCash()}>Добавить</button>\n//       <button onClick={()=> removeCash()}>Отнять</button>\n//       <button onClick={()=> addCustomer(prompt())}>Добавить клиента</button>\n//       <button onClick={()=> removeCash()}>Удалить клиента</button>\n//       <button onClick={()=> dispatch(fetchCustomers('Леха Ряписов великий прораммист!!!'))}>Получить клиентов</button>\n \n//       <div>\n//         {customers.length > 0 ? \n//         <div>\n//           {customers.length }\n//           {customers.map((customer, i)=> \n//             <div onClick={() => removeCustomer(customer)} key={i}>{customer.id} - {customer.username}</div> \n//           )}\n//         </div>\n//         :\n//         <div>\n//           Нет клиентов\n//         </div> \n//         }\n//       </div>\n//     </>\n//   )\n// }","/home/hp/my_test_task/src/app/screens/Users/components/UserItem.js",[],"/home/hp/my_test_task/src/app/store/reducers/personReducer.js",[],"/home/hp/my_test_task/src/app/store/actions/usersActions.js",["77"],"import axios from 'axios'\nimport {\n  ADD_MANY_USERS\n // SORT_BY_ID\n} from '../types'\n\nconst PATH = 'api/v1/users?_pages=10'\nconst PROTOCOL = 'http://'\nconst ROOT_URL = 'emphasoft-test-assignment.herokuapp.com/'\n\nexport const fetchUsers = (token) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'get',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:ADD_MANY_USERS, payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}\n\nexport const rewriteUsers = (payload) => ({type:'SORT_BY_ID', payload})\n\nexport const addUser = ({}) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'post',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:'ADD_NEW_USER', payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}","/home/hp/my_test_task/src/app/screens/Users/components/UserNew.js",["78","79"],"import React, {useState} from 'react'\nimport save from '../../../icons/save.svg'\nimport addUser from '../../../icons/add-user.svg'\nimport {Input} from './Input'\nimport {ErrorsMessage} from './ErrorMessage'\n\nexport const UserNew = (props) => {\n  const [isEdit, setIsEdit] = useState(false)\n  const [userName, setUserName] = useState(props.username || ' ')\n  const [firstName, setFirstName] = useState(props.first_name || ' ')\n  const [lastName, setLastName] = useState(props.last_name || '')\n  const [lastLogin, setLastLogin] = useState(props.last_login || ' ')\n\n  const createUserHandler = (e) => {\n    e.preventDefault()\n    alert('НОВЫЙ ПОЛЬЗОВАТЕЛЬ')\n  }\n\n  return(\n    <div className=\"new-user\">\n      { 0 ? <ErrorsMessage /> : null}\n      <form onSubmit={createUserHandler}>\n        <button \n          type=\"submit\" \n          title=\"add User\"\n        >\n        Новый пользователь:&nbsp;&nbsp; <img src={addUser} alt=\"add-user\" />\n        </button>\n\n\n        <Input onChange={setUserName} value={userName} name=\"userName\" record={isEdit} />\n        <Input onChange={setFirstName} value={firstName} name=\"firstName\" record={isEdit} />\n        <Input onChange={setLastName} value={lastName} name=\"lastName\" record={isEdit} />\n        <Input onChange={setLastLogin} value={lastLogin} name=\"lastLogin\" record={isEdit} />\n\n        <input type=\"text\" placeholder=\"Ввведите username\" />\n        <input type=\"text\" placeholder=\"Ввведите first_name\" />\n        <input type=\"text\" placeholder=\"Ввведите last_name\" />\n        <input type=\"text\" placeholder=\"Ввведите last_login\" />\n        <button type=\"submit\" title=\"Save\">\n          <img src={save}/>\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default UserNew","/home/hp/my_test_task/src/app/screens/Users/components/Input.js",[],"/home/hp/my_test_task/src/app/screens/Users/components/ErrorsMessage.js",[],{"ruleId":"80","severity":1,"message":"81","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":31,"column":1,"nodeType":"87","messageId":"88","endLine":49,"endColumn":11},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"91","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":13,"column":6,"nodeType":"99","endLine":13,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":21,"column":46,"nodeType":"103","messageId":"104","endLine":21,"endColumn":48},{"ruleId":"80","severity":1,"message":"105","line":28,"column":9,"nodeType":"82","messageId":"83","endLine":28,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":33,"column":25,"nodeType":"108","messageId":"109","endLine":33,"endColumn":27},{"ruleId":"80","severity":1,"message":"110","line":8,"column":18,"nodeType":"82","messageId":"83","endLine":8,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":41,"column":11,"nodeType":"113","endLine":41,"endColumn":28},"no-unused-vars","'edit' is defined but never used.","Identifier","unusedVar","'save' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],["114"],["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'create_User' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsEdit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch]",{"range":"119","text":"120"},[423,425],"[dispatch]"]