[{"/home/hp/my_test_task/src/app/store/index.js":"1","/home/hp/my_test_task/src/index.js":"2","/home/hp/my_test_task/src/app/screens/Auth/index.js":"3","/home/hp/my_test_task/src/app/store/reducers/authReducer.js":"4","/home/hp/my_test_task/src/app/store/actions/authActionsAPI.js":"5","/home/hp/my_test_task/src/app/configs/configValid.js":"6","/home/hp/my_test_task/src/app/hooks/useInputValidation.js":"7","/home/hp/my_test_task/src/app/store/actions/usersActionsAPI.js":"8","/home/hp/my_test_task/src/app/App.js":"9","/home/hp/my_test_task/src/app/store/reducers/usersReducer.js":"10","/home/hp/my_test_task/src/app/screens/Users/UserList.js":"11","/home/hp/my_test_task/src/app/components/ErrorMessage.js":"12","/home/hp/my_test_task/src/app/components/TokenMessage.js":"13","/home/hp/my_test_task/src/app/hooks/useLocalStorage.js":"14","/home/hp/my_test_task/src/app/store/types.js":"15","/home/hp/my_test_task/src/app/components/LoadingMessage.js":"16","/home/hp/my_test_task/src/app/components/Button.js":"17","/home/hp/my_test_task/src/app/screens/Users/UserItem.js":"18","/home/hp/my_test_task/src/app/screens/NewUser/index.js":"19"},{"size":482,"mtime":1607615030183,"results":"20","hashOfConfig":"21"},{"size":196,"mtime":1607342083020,"results":"22","hashOfConfig":"21"},{"size":2142,"mtime":1607643391131,"results":"23","hashOfConfig":"21"},{"size":382,"mtime":1607613901025,"results":"24","hashOfConfig":"21"},{"size":800,"mtime":1607636824285,"results":"25","hashOfConfig":"21"},{"size":586,"mtime":1607645248207,"results":"26","hashOfConfig":"21"},{"size":3211,"mtime":1607635320251,"results":"27","hashOfConfig":"21"},{"size":1217,"mtime":1607636256849,"results":"28","hashOfConfig":"21"},{"size":1256,"mtime":1607645486085,"results":"29","hashOfConfig":"21"},{"size":1374,"mtime":1607635803685,"results":"30","hashOfConfig":"21"},{"size":1352,"mtime":1607636345060,"results":"31","hashOfConfig":"21"},{"size":150,"mtime":1607596237178,"results":"32","hashOfConfig":"21"},{"size":186,"mtime":1607602917328,"results":"33","hashOfConfig":"21"},{"size":738,"mtime":1607634498060,"results":"34","hashOfConfig":"21"},{"size":205,"mtime":1607635747991,"results":"35","hashOfConfig":"21"},{"size":156,"mtime":1607611961632,"results":"36","hashOfConfig":"21"},{"size":454,"mtime":1607651391627,"results":"37","hashOfConfig":"21"},{"size":3333,"mtime":1607651519226,"results":"38","hashOfConfig":"21"},{"size":2778,"mtime":1607643718984,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xdoase",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/hp/my_test_task/src/app/store/index.js",[],"/home/hp/my_test_task/src/index.js",[],["84","85"],"/home/hp/my_test_task/src/app/screens/Auth/index.js",["86"],"import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {getTokenAPI, isStatusLoading} from '../../store/actions/authActionsAPI'\nimport {useInputValidation} from '../../hooks/useInputValidation'\nimport {configValid} from '../../configs/configValid'\nimport {useLocalStorage} from '../../hooks/useLocalStorage'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport LoadingMessage from '../../components/LoadingMessage'\n\nconst Auth = () => {\n  const userName = useInputValidation('test_super', configValid.userName)\n  const password = useInputValidation('Nf<U4f<rDbtDxAPn', configValid.password)\n  const [ tokenLocalStorage,  setTokenLocalStorage] = useLocalStorage('token', '')\n  \n  const dispatch = useDispatch()\n  const store = useSelector(state => state.auth)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // установить индикатор загрузки\n    dispatch(isStatusLoading(true))\n    // отправить данные на сервер\n    dispatch(getTokenAPI({username:userName.value, password:password.value}))\n    // записать токен в хранилище\n    setTokenLocalStorage(store.token)\n  }\n\n  return (\n    <>\n      {store.isLoading && <LoadingMessage text={'Ждите, загрузка...'} />}\n      <ErrorMessage text={userName.isDirty && userName.message} />\n      <ErrorMessage text={password.isDirty && password.message} />\n      <form onSubmit={(e)=>submitHandler(e)}>\n        <input \n          value={userName.value} \n          onBlur={(e)=> userName.onBlur(e)}\n          onChange={(e)=> userName.onChange(e)}\n          placeholder=\"Пользователь\"\n          name=\"userName\"\n        />\n        <input \n          value={password.value} \n          onBlur={(e)=> password.onBlur(e)}\n          onChange={(e)=> password.onChange(e)}\n          placeholder=\"Пароль\"\n          name=\"password\"\n          type=\"password\"\n        />\n        <button \n          type=\"submit\"\n          disabled={!userName.inputValid || !password.inputValid} \n        >Войти\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default Auth","/home/hp/my_test_task/src/app/store/reducers/authReducer.js",[],"/home/hp/my_test_task/src/app/store/actions/authActionsAPI.js",[],"/home/hp/my_test_task/src/app/configs/configValid.js",[],"/home/hp/my_test_task/src/app/hooks/useInputValidation.js",[],["87","88"],"/home/hp/my_test_task/src/app/store/actions/usersActionsAPI.js",["89"],"/home/hp/my_test_task/src/app/App.js",[],"/home/hp/my_test_task/src/app/store/reducers/usersReducer.js",[],["90","91"],"/home/hp/my_test_task/src/app/screens/Users/UserList.js",["92","93"],"import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {getUsersAPI, rewriteUsers, addUserAPI} from '../../store/actions/usersActionsAPI'\nimport UserItem from './UserItem'\nimport Button from '../../components/Button'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  const users = useSelector((state)=> state.users.users )\n  \n  useEffect(()=>{\n    dispatch(getUsersAPI())\n  }, [dispatch])\n  \n  const sortBy_Id = () => {\n    const newUsers= users.sort((prev, next) => prev.id - next.id)\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const sortBy_Username = () => {\n    const newUsers = users.sort((prev, next) => {\n      if ( prev.username < next.username ) return -1\n      if ( prev.username < next.username ) return 1\n    })\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const create_User = () => {\n    dispatch(addUserAPI)\n  }\n\n  return (\n    <>\n      <div className=\"buttons-sort\">\n        <Button \n          text=\"Сортировать по ID\" \n          onClick={()=>sortBy_Id()} \n          title=\"Sort by id\"\n        />\n        <Button \n          text=\"Сортировать по Username\" \n          onClick={()=>sortBy_Username()} \n          title=\"Sort By username\"\n        />\n      </div>\n      {users.map((user, i)=> <UserItem key={i} {...user}/>)}\n    </>\n  )\n}\n\nexport default UserList","/home/hp/my_test_task/src/app/components/ErrorMessage.js",[],"/home/hp/my_test_task/src/app/components/TokenMessage.js",[],"/home/hp/my_test_task/src/app/hooks/useLocalStorage.js",[],"/home/hp/my_test_task/src/app/store/types.js",[],"/home/hp/my_test_task/src/app/components/LoadingMessage.js",[],"/home/hp/my_test_task/src/app/components/Button.js",[],"/home/hp/my_test_task/src/app/screens/Users/UserItem.js",["94"],"import React, {useState} from 'react'\nimport {useInputValidation} from '../../hooks/useInputValidation'\nimport {configValid} from '../../configs/configValid'\nimport iconEditSvg from '../../icons/edit.svg'\nimport iconSaveSvg from '../../icons/save.svg'\nimport iconDeleteSvg from '../../icons/delete.svg'\nimport iconCloseSvg from '../../icons/close.svg'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Button from '../../components/Button'\n\nconst UserItem = (props) => {\n  const [isEdit, setIsEdit] = useState(false)\n  const userName = useInputValidation('', configValid.userName)\n  const lastName = useInputValidation('', configValid.lastName)\n  const firstName = useInputValidation('', configValid.firstName)\n  const lastLogin = useInputValidation('', configValid.lastLogin)\n \n  const openEditHandler = () => {\n   // setIsEdit(true)\n    alert('Edit бновить пользователя')\n    setIsEdit(!isEdit)\n  }\n \n  const deleteUserHandler = (id) => {\n    alert('Удаление пользователя')\n    setIsEdit(!isEdit)\n  }\n\n  const updateUserFormHandler = (e) => {\n    e.preventDefault()\n    console.log(e.target[0])\n    alert('Обновить пользователя')\n    setIsEdit(!isEdit)\n  }\n\n  return (\n    <>\n      <ErrorMessage text={userName.isDirty && userName.message} />\n      <ErrorMessage text={firstName.isDirty && firstName.message} />\n      <ErrorMessage text={lastName.isDirty && lastName.message} />\n      <ErrorMessage text={lastLogin.isDirty && lastLogin.message} />\n      <form onSubmit={(e)=> updateUserFormHandler(e)}>\n        {/* <span>ID: {props.id}</span> */}\n        <input type=\"hidden\" name=\"userId\" value={props.id} />\n        <input\n            value={userName.value} \n            onBlur={(e)=> userName.onBlur(e)}\n            onChange={(e)=> userName.onChange(e)}\n            placeholder=\"username\"\n            name=\"username\"\n          />\n          <input\n            value={firstName.value} \n            onBlur={(e)=> firstName.onBlur(e)}\n            onChange={(e)=> firstName.onChange(e)}\n            placeholder=\"firstname\"\n            name=\"firstname\"\n          />\n          <input\n            value={lastName.value} \n            onBlur={(e)=> lastName.onBlur(e)}\n            onChange={(e)=> lastName.onChange(e)}\n            placeholder=\"lastName\"\n            name=\"lastName\"\n          />\n          <input\n            value={lastLogin.value} \n            onBlur={(e)=> lastLogin.onBlur(e)}\n            onChange={(e)=> lastLogin.onChange(e)}\n            placeholder=\"lastLogin\"\n            name=\"lastLogin\"\n            record={true} \n          />\n       \n        {\n          !isEdit ?\n            <Button \n              title=\"Edit\"\n              onClick={()=>setIsEdit(!isEdit)} \n              img={iconEditSvg} \n            />\n        :\n          <>\n            <Button \n              type=\"submit\" \n              img={iconSaveSvg} \n              title=\"Save\" \n            />\n            <Button  \n              img={iconDeleteSvg} \n              title=\"Delete\" \n              onClick={()=>deleteUserHandler(props.id)}\n            />\n            <Button \n              img={iconCloseSvg} \n              title=\"Cancel\" \n              onClick={()=>setIsEdit(!isEdit)} \n            />\n          </>\n       }\n      </form>\n    </>\n  )\n}\n\nexport default UserItem ","/home/hp/my_test_task/src/app/screens/NewUser/index.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":13,"column":11,"nodeType":"101","messageId":"102","endLine":13,"endColumn":28},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":31,"column":28,"nodeType":"107","messageId":"108","endLine":31,"endColumn":30},{"ruleId":"95","replacedBy":"109"},{"ruleId":"97","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":21,"column":46,"nodeType":"113","messageId":"114","endLine":21,"endColumn":48},{"ruleId":"99","severity":1,"message":"115","line":28,"column":9,"nodeType":"101","messageId":"102","endLine":28,"endColumn":20},{"ruleId":"99","severity":1,"message":"116","line":18,"column":9,"nodeType":"101","messageId":"102","endLine":18,"endColumn":24},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'tokenLocalStorage' is assigned a value but never used.","Identifier","unusedVar",["117"],["118"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["117"],["118"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'create_User' is assigned a value but never used.","'openEditHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]