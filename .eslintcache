[{"/home/hp/my_test_task/src/app/App.js":"1","/home/hp/my_test_task/src/app/screens/Users/index.js":"2","/home/hp/my_test_task/src/app/components/Input.js":"3","/home/hp/my_test_task/src/app/store/reducers/authReducer.js":"4","/home/hp/my_test_task/src/app/store/index.js":"5","/home/hp/my_test_task/src/index.js":"6","/home/hp/my_test_task/src/app/store/reducers/usersReducer.js":"7","/home/hp/my_test_task/src/app/components/Button.js":"8","/home/hp/my_test_task/src/app/store/actions/usersActions.js":"9","/home/hp/my_test_task/src/app/screens/Users/UserList.js":"10","/home/hp/my_test_task/src/app/screens/Users/UserItem.js":"11","/home/hp/my_test_task/src/app/store/reducers/personReducer.js":"12","/home/hp/my_test_task/src/app/screens/Auth/index.js":"13","/home/hp/my_test_task/src/app/hooks/useInputValidation.js":"14","/home/hp/my_test_task/src/app/components/ErrorMessage.js":"15","/home/hp/my_test_task/src/app/screens/Users/FormNewUser.js":"16","/home/hp/my_test_task/src/app/store/types.js":"17","/home/hp/my_test_task/src/app/components/TokenMessage.js":"18","/home/hp/my_test_task/src/app/hooks/useLocalStorage.js":"19","/home/hp/my_test_task/src/app/store/actions/authActions.js":"20"},{"size":661,"mtime":1607602723734,"results":"21","hashOfConfig":"22"},{"size":217,"mtime":1607600102227,"results":"23","hashOfConfig":"22"},{"size":430,"mtime":1607596369497,"results":"24","hashOfConfig":"22"},{"size":272,"mtime":1607609999509,"results":"25","hashOfConfig":"22"},{"size":561,"mtime":1607582579811,"results":"26","hashOfConfig":"22"},{"size":196,"mtime":1607342083020,"results":"27","hashOfConfig":"22"},{"size":1620,"mtime":1607561336059,"results":"28","hashOfConfig":"22"},{"size":325,"mtime":1607596480060,"results":"29","hashOfConfig":"22"},{"size":1322,"mtime":1607453023806,"results":"30","hashOfConfig":"22"},{"size":1339,"mtime":1607596497245,"results":"31","hashOfConfig":"22"},{"size":3881,"mtime":1607604962750,"results":"32","hashOfConfig":"22"},{"size":155,"mtime":1607438460178,"results":"33","hashOfConfig":"22"},{"size":1830,"mtime":1607610363261,"results":"34","hashOfConfig":"22"},{"size":1757,"mtime":1607604900225,"results":"35","hashOfConfig":"22"},{"size":150,"mtime":1607596237178,"results":"36","hashOfConfig":"22"},{"size":2813,"mtime":1607605378234,"results":"37","hashOfConfig":"22"},{"size":314,"mtime":1607605730421,"results":"38","hashOfConfig":"22"},{"size":186,"mtime":1607602917328,"results":"39","hashOfConfig":"22"},{"size":390,"mtime":1607604837143,"results":"40","hashOfConfig":"22"},{"size":795,"mtime":1607609868489,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1xdoase",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hp/my_test_task/src/app/App.js",["92"],"import React from 'react'\nimport './App.css'\nimport {Provider} from 'react-redux'\nimport {store} from './store'\nimport Users from './screens/Users'\nimport Auth from './screens/Auth'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\"> \n        <div className=\"wrapper\">\n           <div className=\"newsletter\"> \n            <h2 className=\"title\">\n              Тестовое задание в компанию \n              <a href=\"https://emphasoft.com\">Emphasoft</a>\n            </h2>\n            <Auth />\n            {/* <Users /> */}\n          </div>\n        </div>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App",["93","94"],"/home/hp/my_test_task/src/app/screens/Users/index.js",[],["95","96"],"/home/hp/my_test_task/src/app/components/Input.js",["97"],"import { findAllByPlaceholderText } from '@testing-library/react'\nimport React from 'react'\n\nconst Input = (props) => {\n  const { type, record, name, onChange, value,  placeholder} = props\n  return (\n    <input \n      type={type ? type : 'text' }\n      onChange={(e)=> onChange(e.target.value)}\n      disabled={!record}\n      value={value || ''}\n      placeholder={placeholder}\n      name={name}\n    />\n  )\n}\n\nexport default Input",["98","99"],"/home/hp/my_test_task/src/app/store/reducers/authReducer.js",[],"/home/hp/my_test_task/src/app/store/index.js",[],"/home/hp/my_test_task/src/index.js",[],"/home/hp/my_test_task/src/app/store/reducers/usersReducer.js",[],["100","101"],"/home/hp/my_test_task/src/app/components/Button.js",[],["102","103"],"/home/hp/my_test_task/src/app/store/actions/usersActions.js",["104"],"import axios from 'axios'\nimport {\n  ADD_MANY_USERS\n // SORT_BY_ID\n} from '../types'\n\nconst PATH = 'api/v1/users?_pages=10'\nconst PROTOCOL = 'http://'\nconst ROOT_URL = 'emphasoft-test-assignment.herokuapp.com/'\n\nexport const fetchUsers = (token) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'get',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:ADD_MANY_USERS, payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}\n\nexport const rewriteUsers = (payload) => ({type:'SORT_BY_ID', payload})\n\nexport const addUser = ({}) => async dispatch => {\n  try {\n    const res = await axios({\n      url: PROTOCOL + ROOT_URL + PATH,\n      method: 'post',\n      timeout: 8000,\n      headers: {\n        'Content-Type':'application/json',\n        'Authorization':`Token ${'781bd9f1de084f4daa7ba2aa8a71a2eab855354e'}`\n      }\n    })\n    if(res.status === 200) {\n      dispatch({type:'ADD_NEW_USER', payload:res.data})\n    }\n  }catch(err){\n    // TODO: errors\n    // {username:'test_super', password:'Nf<U4f<rDbtDxAPn'}\n  }\n}","/home/hp/my_test_task/src/app/screens/Users/UserList.js",["105","106"],"import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {fetchUsers, rewriteUsers, addUser} from '../../store/actions/usersActions'\nimport UserItem from './UserItem'\nimport Button from '../../components/Button'\n\nconst UserList = () => {\n  const dispatch = useDispatch()\n  const users = useSelector((state)=> state.users.users )\n\n  useEffect(()=>{\n    dispatch(fetchUsers())\n  }, [dispatch])\n  \n  const sortBy_Id = () => {\n    const newUsers= users.sort((prev, next) => prev.id - next.id)\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const sortBy_Username = () => {\n    const newUsers = users.sort((prev, next) => {\n      if ( prev.username < next.username ) return -1\n      if ( prev.username < next.username ) return 1\n    })\n    dispatch(rewriteUsers(newUsers))\n  }\n\n  const create_User = () => {\n    dispatch(addUser)\n  }\n\n  return (\n    <>\n      <div className=\"buttons-sort\">\n        <Button \n          text=\"Сортировать по ID\" \n          onClick={()=>sortBy_Id()} \n          title=\"Sort by id\"\n        />\n        <Button \n          text=\"Сортировать по Username\" \n          onClick={()=>sortBy_Username()} \n          title=\"Sort By username\"\n        />\n      </div>\n      {users.map((user, i)=> <UserItem key={i} {...user}/>)}\n    </>\n  )\n}\n\nexport default UserList","/home/hp/my_test_task/src/app/screens/Users/UserItem.js",["107"],"import React, {useState} from 'react'\nimport iconEditSvg from '../../icons/edit.svg'\nimport iconSaveSvg from '../../icons/save.svg'\nimport iconDeleteSvg from '../../icons/delete.svg'\nimport iconCloseSvg from '../../icons/close.svg'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport {useInputValidation} from '../../hooks/useInputValidation'\nimport Button from '../../components/Button'\n\nconst UserItem = (props) => {\n  const [isEdit, setIsEdit] = useState(false)\n  const userName = useInputValidation('', {isEmpty:true, minLength:3, isUserName:true}, 'username')\n  const firstName = useInputValidation('', {isEmpty:true, minLength:5, maxLength:30}, 'firstname')\n  const lastName = useInputValidation('', {isEmpty:true, minLength:3, isUserName:true}, 'lastname')\n  const lastLogin = useInputValidation('', {isEmpty:true, minLength:5, maxLength:30}, 'lastlogin')\n  // TODO: is_superuser ??\n  // TODO: is_active  ??\n\n  /*\n    Устанавливает флаг, разрешает или\n    запрещает редактировать поля input.\n  */\n  const openEditHandler = () => {\n \n  }\n  /* \n    Если форма редактирования закрыта \n    без изменений, тогда вернуть State \n    в начальное состояние.\n  */\n  // const closeEditHandler = () => {\n  //   setUserName(props.username)\n  //   setFirstName(props.first_name)\n  //   setLastName(props.last_name)\n  //   setLastLogin(props.last_login)\n  //   setIsEdit(!isEdit)\n  // }\n  \n  const deleteUserHandler = (id) => {\n    // TODO  \n    alert('Удаление пользователя')\n  }\n\n  const updateUserFormHandler = (e) => {\n    e.preventDefault()\n    // TODO  \n    console.log(e.target[0])\n    alert('Обновить пользователя')\n  \n  }\n\n  return (\n    <>\n      <ErrorMessage text={userName.isDirty && userName.message} />\n      <ErrorMessage text={firstName.isDirty && firstName.message} />\n      <ErrorMessage text={lastName.isDirty && lastName.message} />\n      <ErrorMessage text={lastLogin.isDirty && lastLogin.message} />\n      <form onSubmit={(e)=> updateUserFormHandler(e)}>\n        {/* <span>ID: {props.id}</span> */}\n        <input type=\"hidden\" name=\"userId\" value={props.id} />\n        <input\n            value={userName.value} \n            onBlur={(e)=> userName.onBlur(e)}\n            onChange={(e)=> userName.onChange(e)}\n            placeholder=\"username\"\n            name=\"username\"\n          />\n          <input\n            value={firstName.value} \n            onBlur={(e)=> firstName.onBlur(e)}\n            onChange={(e)=> firstName.onChange(e)}\n            placeholder=\"firstname\"\n            name=\"firstname\"\n          />\n          <input\n            value={lastName.value} \n            onBlur={(e)=> lastName.onBlur(e)}\n            onChange={(e)=> lastName.onChange(e)}\n            placeholder=\"lastName\"\n            name=\"lastName\"\n          />\n          <input\n            value={lastLogin.value} \n            onBlur={(e)=> lastLogin.onBlur(e)}\n            onChange={(e)=> lastLogin.onChange(e)}\n            placeholder=\"lastLogin\"\n            name=\"lastLogin\"\n            record={true} \n          />\n       \n        {\n          !isEdit ?\n            <Button \n              title=\"Edit\"\n              onClick={openEditHandler} \n              img={iconEditSvg} \n            />\n        :\n          <>\n            <Button \n              type=\"submit\" \n              img={iconSaveSvg} \n              title=\"Save\" \n            />\n            <Button  \n              img={iconDeleteSvg} \n              title=\"Delete\" \n              onClick={()=>deleteUserHandler(props.id)}\n            />\n            <Button \n              img={iconCloseSvg} \n              title=\"Cancel\" \n              onClick={()=>{}} \n            />\n          </>\n       }\n      </form>\n    </>\n  )\n}\n\nexport default UserItem ","/home/hp/my_test_task/src/app/store/reducers/personReducer.js",[],"/home/hp/my_test_task/src/app/screens/Auth/index.js",["108"],"/home/hp/my_test_task/src/app/hooks/useInputValidation.js",[],"/home/hp/my_test_task/src/app/components/ErrorMessage.js",[],"/home/hp/my_test_task/src/app/screens/Users/FormNewUser.js",[],"/home/hp/my_test_task/src/app/store/types.js",[],"/home/hp/my_test_task/src/app/components/TokenMessage.js",[],"/home/hp/my_test_task/src/app/hooks/useLocalStorage.js",[],"/home/hp/my_test_task/src/app/store/actions/authActions.js",["109","110","111"],{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":13},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"112","severity":1,"message":"122","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":34},{"ruleId":"116","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"116","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"116","replacedBy":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":33,"column":25,"nodeType":"131","messageId":"132","endLine":33,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":21,"column":46,"nodeType":"135","messageId":"136","endLine":21,"endColumn":48},{"ruleId":"112","severity":1,"message":"137","line":28,"column":9,"nodeType":"114","messageId":"115","endLine":28,"endColumn":20},{"ruleId":"112","severity":1,"message":"138","line":11,"column":18,"nodeType":"114","messageId":"115","endLine":11,"endColumn":27},{"ruleId":"112","severity":1,"message":"139","line":7,"column":9,"nodeType":"114","messageId":"115","endLine":7,"endColumn":24},{"ruleId":"112","severity":1,"message":"140","line":5,"column":7,"nodeType":"114","messageId":"115","endLine":5,"endColumn":11},{"ruleId":"112","severity":1,"message":"141","line":6,"column":7,"nodeType":"114","messageId":"115","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"142","line":7,"column":7,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],"'findAllByPlaceholderText' is defined but never used.",["143"],["144"],["143"],["144"],["143"],["144"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'create_User' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","'useLocalStorage' is defined but never used.","'PATH' is assigned a value but never used.","'PROTOCOL' is assigned a value but never used.","'ROOT_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]