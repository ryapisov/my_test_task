[{"/home/hp/my_test_task/src/app/store/index.js":"1","/home/hp/my_test_task/src/app/components/Section.js":"2","/home/hp/my_test_task/src/app/store/types.js":"3","/home/hp/my_test_task/src/app/hooks/useInputValidation.js":"4","/home/hp/my_test_task/src/index.js":"5","/home/hp/my_test_task/src/app/containers/index.js":"6","/home/hp/my_test_task/src/app/components/index.js":"7","/home/hp/my_test_task/src/app/containers/Auth.js":"8","/home/hp/my_test_task/src/app/containers/Search.js":"9","/home/hp/my_test_task/src/app/components/Button.js":"10","/home/hp/my_test_task/src/app/components/Input.js":"11","/home/hp/my_test_task/src/app/components/Notice.js":"12","/home/hp/my_test_task/src/app/components/Wrapper.js":"13","/home/hp/my_test_task/src/app/store/reducers/usersReducer.js":"14","/home/hp/my_test_task/src/app/configs/configValid.js":"15","/home/hp/my_test_task/src/app/store/actions/usersActions.js":"16","/home/hp/my_test_task/src/app/App.js":"17","/home/hp/my_test_task/src/app/containers/UserList.js":"18","/home/hp/my_test_task/src/app/store/reducers/authReducer.js":"19","/home/hp/my_test_task/src/app/containers/NewUser.js":"20","/home/hp/my_test_task/src/app/store/actions/authActions.js":"21","/home/hp/my_test_task/src/app/components/Form.js":"22","/home/hp/my_test_task/src/app/containers/EditForm.js":"23","/home/hp/my_test_task/src/app/containers/UserItem.js":"24"},{"size":482,"mtime":1607615030183,"results":"25","hashOfConfig":"26"},{"size":392,"mtime":1607854727028,"results":"27","hashOfConfig":"26"},{"size":205,"mtime":1607635747991,"results":"28","hashOfConfig":"26"},{"size":3211,"mtime":1607635320251,"results":"29","hashOfConfig":"26"},{"size":196,"mtime":1607342083020,"results":"30","hashOfConfig":"26"},{"size":174,"mtime":1607848149829,"results":"31","hashOfConfig":"26"},{"size":255,"mtime":1607847674950,"results":"32","hashOfConfig":"26"},{"size":1975,"mtime":1607849642713,"results":"33","hashOfConfig":"26"},{"size":429,"mtime":1607848037015,"results":"34","hashOfConfig":"26"},{"size":526,"mtime":1607853947004,"results":"35","hashOfConfig":"26"},{"size":543,"mtime":1607859788009,"results":"36","hashOfConfig":"26"},{"size":196,"mtime":1607850445421,"results":"37","hashOfConfig":"26"},{"size":164,"mtime":1607847527170,"results":"38","hashOfConfig":"26"},{"size":675,"mtime":1607843894136,"results":"39","hashOfConfig":"26"},{"size":606,"mtime":1607661046834,"results":"40","hashOfConfig":"26"},{"size":2639,"mtime":1607665053139,"results":"41","hashOfConfig":"26"},{"size":953,"mtime":1607853313544,"results":"42","hashOfConfig":"26"},{"size":540,"mtime":1607857120491,"results":"43","hashOfConfig":"26"},{"size":382,"mtime":1607613901025,"results":"44","hashOfConfig":"26"},{"size":3650,"mtime":1607853454714,"results":"45","hashOfConfig":"26"},{"size":807,"mtime":1607658948731,"results":"46","hashOfConfig":"26"},{"size":359,"mtime":1607854350854,"results":"47","hashOfConfig":"26"},{"size":2893,"mtime":1607860755316,"results":"48","hashOfConfig":"26"},{"size":1164,"mtime":1607860724259,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1xdoase",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hp/my_test_task/src/app/store/index.js",[],["106","107"],"/home/hp/my_test_task/src/app/components/Section.js",[],"/home/hp/my_test_task/src/app/store/types.js",[],["108","109"],"/home/hp/my_test_task/src/app/hooks/useInputValidation.js",[],["110","111"],"/home/hp/my_test_task/src/index.js",[],"/home/hp/my_test_task/src/app/containers/index.js",[],"/home/hp/my_test_task/src/app/components/index.js",[],["112","113"],"/home/hp/my_test_task/src/app/containers/Auth.js",["114","115","116","117"],"import React from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useInputValidation} from '../hooks/useInputValidation'\nimport {configValid} from '../configs/configValid'\nimport {Input, Notice,  Button} from '../components'\nimport {getTokenAPI, isStatusLoading} from '../store/actions/authActions'\n\nfunction Auth() {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.auth)\n  const userName = useInputValidation('test_super', configValid.userName)\n  const password = useInputValidation('Nf<U4f<rDbtDxAPn', configValid.password)\n\n  const submitHandler = (e) =>{\n    e.preventDefault()\n    // // установить индикатор загрузки\n    // dispatch(isStatusLoading(true))\n    // // отправить данные на сервер\n    // dispatch(getTokenAPI({username:userName.value, password:password.value}))\n    // // записать токен в хранилище\n    // setTokenLocalStorage(store.token)\n\n    alert('отправлено')\n  }\n\n  return (\n    <form onSubmit={(e)=>submitHandler(e)}>\n      <h3>Вход</h3>\n      {userName.isDirty && userName.message && <Notice>{userName.message}</Notice>}\n      {password.isDirty && userName.message && <Notice>{password.message}</Notice>}\n      { false && <Notice>Загрузка...</Notice>}\n      <Input\n        value={userName.value} \n        onBlur={(e)=> userName.onBlur(e)}\n        onChange={(e)=> userName.onChange(e)}\n        placeholder=\"Пользователь\"\n        name=\"userName\"\n      />\n      <Input\n        value={password.value} \n        onBlur={(e)=> password.onBlur(e)}\n        onChange={(e)=> password.onChange(e)}\n        placeholder=\"Пароль\"\n        name=\"password\"\n        type=\"password\"\n      />\n      <Button\n        isActive={!userName.inputValid || !password.inputValid}\n        disabled={!userName.inputValid || !password.inputValid} \n      >Войти\n      </Button>\n    </form>\n  )\n}\n\nexport default Auth\n","/home/hp/my_test_task/src/app/containers/Search.js",[],"/home/hp/my_test_task/src/app/components/Button.js",[],"/home/hp/my_test_task/src/app/components/Input.js",[],"/home/hp/my_test_task/src/app/components/Notice.js",[],"/home/hp/my_test_task/src/app/components/Wrapper.js",[],"/home/hp/my_test_task/src/app/store/reducers/usersReducer.js",[],"/home/hp/my_test_task/src/app/configs/configValid.js",[],"/home/hp/my_test_task/src/app/store/actions/usersActions.js",[],"/home/hp/my_test_task/src/app/App.js",["118"],"import React from 'react'\nimport 'normalize.css'\nimport {Provider} from 'react-redux'\nimport {store} from './store'\n// import Auth from '../app/containers/Auth'\n// import UserList from '../app/containers/UserList'\n// import NewUser from '../app/containers/NewUser'\n// import Search from '../app/containers/Search'\nimport {Auth, NewUser, Search, UserList } from '../app/containers'\nimport {Wrapper, Section} from '../app/components'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Wrapper>\n        <Section> \n          <h2>Тестовое задание в компанию \n            <a href=\"https://emphasoft.com\">Emphasoft</a>\n          </h2>\n        </Section>\n        <Section> \n          {true && <Auth />}\n        </Section>\n        <Section>\n          {true && <NewUser />}\n          </Section>\n          <Section>\n          {true && <UserList />}\n        </Section>\n      </Wrapper>\n    </Provider>\n  )\n}\n\nexport default App","/home/hp/my_test_task/src/app/containers/UserList.js",[],"/home/hp/my_test_task/src/app/store/reducers/authReducer.js",[],"/home/hp/my_test_task/src/app/containers/NewUser.js",["119","120","121","122"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {useInputValidation} from '../hooks/useInputValidation'\nimport {createNewUserAPI} from '../store/actions/usersActions'\nimport {configValid} from '../configs/configValid'\nimport {useDispatch, useSelector} from 'react-redux'\nimport iconSaveSvg from '../icons/save.svg'\nimport iconCloseSvg from '../icons/close.svg'\nimport iconAddUserSvg from '../icons/addUser.svg'\nimport {Input, Button, Notice} from '../components'\n\nfunction NewUser() {\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.auth)\n  const [isShowForm, setIsShowForm] = useState(true)\n  const userName = useInputValidation('', configValid.userName)\n  const lastName = useInputValidation('', configValid.lastName)\n  const password = useInputValidation('', configValid.password)\n  const firstName = useInputValidation('', configValid.firstName)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // TODO:\n    // dispatch(createNewUserAPI({\n    //   userName,\n    //   lastName,\n    //   firstName,\n    //   lastLogin: new Date(),\n    //   is_active: true\n    //   password:\n    // }))\n    alert('Создание нового пользователя')\n  }\n\n  return (\n    <>\n      <h3>Дабавить пользователя</h3>\n      {\n      isShowForm \n      ? \n        <Button\n          type=\"button\"\n          title=\"Cancel\" \n          onClick={()=> setIsShowForm(!isShowForm) } \n        > добавить пользователя<img src={iconAddUserSvg} alt=''/>\n        </Button>\n      :\n        <form onSubmit={submitHandler}>\n          {userName.isDirty && userName.message && <Notice>{userName.message}</Notice>}\n          {firstName.isDirty && firstName.message && <Notice>{firstName.message}</Notice>}\n          {lastName.isDirty && lastName.message && <Notice>{lastName.message}</Notice>}\n          {password.isDirty && password.message && <Notice>{password.message}</Notice>}\n          { false && <Notice>Загрузка...</Notice>}\n          <Input\n            value={userName.value} \n            onBlur={(e)=> userName.onBlur(e)}\n            onChange={(e)=> userName.onChange(e)}\n            placeholder=\"userName\"\n            name=\"userName\"\n          />\n          <Input\n            value={firstName.value} \n            onBlur={(e)=> firstName.onBlur(e)}\n            onChange={(e)=> firstName.onChange(e)}\n            placeholder=\"firstName\"\n            name=\"firstName\"\n          />\n          <Input\n            type=\"text\"\n            value={lastName.value} \n            onBlur={(e)=> lastName.onBlur(e)}\n            onChange={(e)=> lastName.onChange(e)}\n            placeholder=\"lastName\"\n            name=\"lastName\"\n          />\n          <Input\n            value={password.value} \n            onBlur={(e)=> password.onBlur(e)}\n            onChange={(e)=> password.onChange(e)}\n            placeholder=\"password\"\n            name=\"password\"\n          />\n          <Button\n            type=\"submit\"\n            title=\"Save\"\n            isActive={\n              !userName.inputValid || \n              !lastName.inputValid || \n              !firstName.inputValid\n            }\n            disabled={\n              !userName.inputValid || \n              !lastName.inputValid || \n              !firstName.inputValid\n            }\n          ><img src={iconSaveSvg} alt=''/>\n          </Button>\n          <Button\n            type=\"button\"\n            title=\"Cancel\" \n            onClick={()=> setIsShowForm(!isShowForm) } \n          ><img src={iconCloseSvg} alt=''/>\n          </Button>\n        </form>\n      }\n    </>\n  )\n}\n\nexport default NewUser\n","/home/hp/my_test_task/src/app/store/actions/authActions.js",[],"/home/hp/my_test_task/src/app/components/Form.js",[],"/home/hp/my_test_task/src/app/containers/EditForm.js",["123","124","125","126"],"import React, {useEffect, useState} from 'react'\nimport {useInputValidation} from '../hooks/useInputValidation'\nimport {configValid} from '../configs/configValid'\n// import {useDispatch, useSelector} from 'react-redux'\n// import {getUsersAPI, rewriteUsers, addUserAPI} from '../store/actions/usersActions'\n// import iconEditSvg from '../icons/edit.svg'\nimport iconSaveSvg from '../icons/save.svg'\nimport iconDeleteSvg from '../icons/delete.svg'\nimport iconCloseSvg from '../icons/close.svg'\nimport {Input, Form, Notice,  Button} from '../components'\n\nfunction EditForm(props){\n  const [isEdit, setIsEdit] = useState(false)\n  const userName = useInputValidation('', configValid.userName)\n  const lastName = useInputValidation('', configValid.lastName)\n  const firstName = useInputValidation('', configValid.firstName)\n  const password = useInputValidation('', configValid.password)\n  const time = new Date().getFullYear()\n\n  return(\n    <>\n     <Form onSubmit={(e)=> {}}>\n      {userName.isDirty && userName.message && <Notice>{userName.message}</Notice>}\n      {firstName.isDirty && firstName.message && <Notice>{firstName.message}</Notice>}\n      {lastName.isDirty && lastName.message && <Notice>{lastName.message}</Notice>}\n      {password.isDirty && password.message && <Notice>{password.message}</Notice>}\n      <input type=\"hidden\" name=\"userId\" value={props.id} />\n      <Input\n        value={userName.value} \n        onBlur={(e)=> userName.onBlur(e)}\n        onChange={(e)=> userName.onChange(e)}\n        placeholder=\"use rname\"\n        name=\"username\"\n        isActive={true}\n      />\n      <Input\n        value={firstName.value} \n        onBlur={(e)=> firstName.onBlur(e)}\n        onChange={(e)=> firstName.onChange(e)}\n        placeholder=\"first name\"\n        name=\"firstname\"\n        isActive={true}\n      />\n      <Input\n        value={lastName.value} \n        onBlur={(e)=> lastName.onBlur(e)}\n        onChange={(e)=> lastName.onChange(e)}\n        placeholder=\"last Name\"\n        name=\"lastName\"\n        isActive={true}\n      />\n      <Input\n        value={password.value} \n        onBlur={(e)=> password.onBlur(e)}\n        onChange={(e)=> password.onChange(e)}\n        placeholder=\"password\"\n        name=\"password\"\n        isActive={true}\n      />\n        <Button\n          type=\"submit\"\n          title=\"Save\"\n          disabled={\n            !userName.inputValid || \n            !lastName.inputValid || \n            !firstName.inputValid\n          }\n        ><img src={iconSaveSvg} alt=''/>\n        </Button>\n        <Button \n          type=\"button\"\n          title=\"Delete\"\n          onClick={()=>{}}\n        ><img src={iconDeleteSvg} alt=''/>\n        </Button>\n        <Button\n          type=\"button\"\n          title=\"Cancel\" \n          onClick={props.onClick} \n        ><img src={iconCloseSvg} alt=''/>\n        </Button>\n      </Form>\n    </>\n  )\n}\n\nexport default EditForm","/home/hp/my_test_task/src/app/containers/UserItem.js",["127","128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"130","replacedBy":"136"},{"ruleId":"132","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":6,"column":9,"nodeType":"142","messageId":"143","endLine":6,"endColumn":20},{"ruleId":"140","severity":1,"message":"144","line":6,"column":22,"nodeType":"142","messageId":"143","endLine":6,"endColumn":37},{"ruleId":"140","severity":1,"message":"145","line":9,"column":9,"nodeType":"142","messageId":"143","endLine":9,"endColumn":17},{"ruleId":"140","severity":1,"message":"146","line":10,"column":9,"nodeType":"142","messageId":"143","endLine":10,"endColumn":14},{"ruleId":"140","severity":1,"message":"147","line":9,"column":24,"nodeType":"142","messageId":"143","endLine":9,"endColumn":30},{"ruleId":"140","severity":1,"message":"148","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"149","line":4,"column":9,"nodeType":"142","messageId":"143","endLine":4,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":13,"column":9,"nodeType":"142","messageId":"143","endLine":13,"endColumn":17},{"ruleId":"140","severity":1,"message":"146","line":14,"column":9,"nodeType":"142","messageId":"143","endLine":14,"endColumn":14},{"ruleId":"140","severity":1,"message":"150","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"151","line":13,"column":10,"nodeType":"142","messageId":"143","endLine":13,"endColumn":16},{"ruleId":"140","severity":1,"message":"152","line":13,"column":18,"nodeType":"142","messageId":"143","endLine":13,"endColumn":27},{"ruleId":"140","severity":1,"message":"153","line":18,"column":9,"nodeType":"142","messageId":"143","endLine":18,"endColumn":13},{"ruleId":"140","severity":1,"message":"150","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"154","line":3,"column":22,"nodeType":"142","messageId":"143","endLine":3,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":43,"column":10,"nodeType":"157","endLine":43,"endColumn":35},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],["158"],["159"],["158"],["159"],"no-unused-vars","'getTokenAPI' is defined but never used.","Identifier","unusedVar","'isStatusLoading' is defined but never used.","'dispatch' is assigned a value but never used.","'store' is assigned a value but never used.","'Search' is defined but never used.","'styled' is defined but never used.","'createNewUserAPI' is defined but never used.","'useEffect' is defined but never used.","'isEdit' is assigned a value but never used.","'setIsEdit' is assigned a value but never used.","'time' is assigned a value but never used.","'Notice' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]